#!/data/data/com.termux/files/usr/bin/bash

# Display current UTC date and time in specified format
echo "Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted):" $(date -u "+%Y-%m-%d %H:%M:%S")

# Display current user's login
echo "Current User's Login:" $(whoami)

#!/data/data/com.termux/files/usr/bin/bash

# Function to get Termux-specific user information
get_user_info() {
    # Get Termux username from environment variable
    TERMUX_USERNAME="$USER"
    
    # Get user's home directory
    USER_HOME="$HOME"
    
    # Check if running with sudo
    IS_SUDO=false
    if [ "$(id -u)" = "0" ]; then
        IS_SUDO=true
    fi
    
    # Get user groups
    USER_GROUPS=$(groups)
    
    # Display all information
    echo "System Information:"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "Current Date/Time (UTC): $(date -u "+%Y-%m-%d %H:%M:%S")"
    echo "Username: $TERMUX_USERNAME"
    echo "Home Directory: $USER_HOME"
    echo "Root Access: $IS_SUDO"
    echo "User Groups: $USER_GROUPS"
    echo "Terminal: $TERM"
    echo "Shell: $SHELL"
    if [ -f "$PREFIX/etc/motd" ]; then
        echo "Termux Version: $(cat $PREFIX/etc/motd | grep -o "Welcome to Termux.*" | cut -d' ' -f4)"
    fi
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
}

# Execute the function
get_user_info

System Information:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Current Date/Time (UTC): 2025-05-19 05:24:09
Username: mathew-sudo
Home Directory: /data/data/com.termux/files/home
Root Access: true
User Groups: mathew-sudo wheel
Terminal: xterm-256color
Shell: /data/data/com.termux/files/usr/bin/bash
Termux Version: 0.118.0
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#!/data/data/com.termux/files/usr/bin/bash
# Termux Tool Installer script
# Generated on 2025-05-19 05:02:14
# This script will install the selected security tools in Termux

echo "====================================="
echo "Termux Security Tool Installer"
echo "====================================="
echo ""

echo "Updating package lists..."
pkg update -y
echo ""

echo "Setting up environment for root tools..."
pkg install proot -y

echo "Setting up PRoot..."
mkdir -p $HOME/.termux/boot
cat > $HOME/.termux/boot/proot_startup.sh << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash
proot --link2symlink -0 -l -p -L -H $HOME/.termux/boot/fake_root_shell.sh
EOF

cat > $HOME/.termux/boot/fake_root_shell.sh << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash
echo "PRoot is active - fake root environment enabled"
export PATH=$PATH:/system/bin:/system/xbin
export LD_LIBRARY_PATH=/system/lib
alias su="echo Already root!"
PS1="# "
$@
EOF

chmod +x $HOME/.termux/boot/*.sh
echo "PRoot setup complete."
echo ""

# Installing selected tools
echo "Installing Nmap..."
pkg install nmap -y
if [ $? -eq 0 ]; then
    echo "Nmap installed successfully."
else
    echo "Error installing Nmap."
fi
echo ""

echo "Installing Metasploit Framework..."
pkg install unstable-repo -y && pkg install metasploit -y
if [ $? -eq 0 ]; then
    echo "Metasploit Framework installed successfully."
else
    echo "Error installing Metasploit Framework."
fi
echo ""

echo "Installing THC Hydra..."
pkg install hydra -y
if [ $? -eq 0 ]; then
    echo "THC Hydra installed successfully."
else
    echo "Error installing THC Hydra."
fi
echo ""

echo "Installing Aircrack-ng..."
pkg install root-repo -y && pkg install aircrack-ng -y
if [ $? -eq 0 ]; then
    echo "Aircrack-ng installed successfully."
else
    echo "Error installing Aircrack-ng."
fi
echo ""

echo "Installing Wireshark (TShark)..."
pkg install tshark -y
if [ $? -eq 0 ]; then
    echo "Wireshark (TShark) installed successfully."
else
    echo "Error installing Wireshark (TShark)."
fi
echo ""

echo "Installing SQLMap..."
pkg install python -y && pip install sqlmap
if [ $? -eq 0 ]; then
    echo "SQLMap installed successfully."
else
    echo "Error installing SQLMap."
fi
echo ""

echo "Installing Kali NetHunter..."
pkg install wget -y && wget -O install-nethunter-termux https://offs.ec/2MceZWr && chmod +x install-nethunter-termux && ./install-nethunter-termux
if [ $? -eq 0 ]; then
    echo "Kali NetHunter installed successfully."
else
    echo "Error installing Kali NetHunter."
fi
echo ""

echo "Installing Hashcat..."
pkg install hashcat -y
if [ $? -eq 0 ]; then
    echo "Hashcat installed successfully."
else
    echo "Error installing Hashcat."
fi
echo ""

echo "Installing John the Ripper..."
pkg install john -y
if [ $? -eq 0 ]; then
    echo "John the Ripper installed successfully."
else
    echo "Error installing John the Ripper."
fi
echo ""

echo "Installing Crunch..."
pkg install crunch -y
if [ $? -eq 0 ]; then
    echo "Crunch installed successfully."
else
    echo "Error installing Crunch."
fi
echo ""

echo "Installing Medusa..."
pkg install medusa -y
if [ $? -eq 0 ]; then
    echo "Medusa installed successfully."
else
    echo "Error installing Medusa."
fi
echo ""

echo "Installing Kraken..."
pkg install git python -y && git clone https://github.com/Kraken-Project/Kraken.git && cd Kraken && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Kraken installed successfully."
else
    echo "Error installing Kraken."
fi
echo ""

echo "Installing Wifite..."
pkg install git python -y && git clone https://github.com/derv82/wifite2.git && cd wifite2 && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Wifite installed successfully."
else
    echo "Error installing Wifite."
fi
echo ""

echo "Installing Bettercap..."
pkg install bettercap -y
if [ $? -eq 0 ]; then
    echo "Bettercap installed successfully."
else
    echo "Error installing Bettercap."
fi
echo ""

echo "Installing Nikto..."
pkg install perl -y && cpan install Net::SSLeay && git clone https://github.com/sullo/nikto.git
if [ $? -eq 0 ]; then
    echo "Nikto installed successfully."
else
    echo "Error installing Nikto."
fi
echo ""

echo "Installing DIRB..."
pkg install dirb -y
if [ $? -eq 0 ]; then
    echo "DIRB installed successfully."
else
    echo "Error installing DIRB."
fi
echo ""

echo "Installing Slowloris..."
pkg install git python -y && git clone https://github.com/gkbrk/slowloris.git
if [ $? -eq 0 ]; then
    echo "Slowloris installed successfully."
else
    echo "Error installing Slowloris."
fi
echo ""

echo "Installing BeEF XSS Framework..."
pkg install git ruby -y && git clone https://github.com/beefproject/beef.git && cd beef && bundle install
if [ $? -eq 0 ]; then
    echo "BeEF XSS Framework installed successfully."
else
    echo "Error installing BeEF XSS Framework."
fi
echo ""

echo "Installing Commix..."
pkg install git python -y && git clone https://github.com/commixproject/commix.git
if [ $? -eq 0 ]; then
    echo "Commix installed successfully."
else
    echo "Error installing Commix."
fi
echo ""

echo "Installing Reaver..."
pkg install reaver -y
if [ $? -eq 0 ]; then
    echo "Reaver installed successfully."
else
    echo "Error installing Reaver."
fi
echo ""

echo "Installing Sherlock..."
pkg install git python -y && git clone https://github.com/sherlock-project/sherlock.git && cd sherlock && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Sherlock installed successfully."
else
    echo "Error installing Sherlock."
fi
echo ""

echo "Installing Zphisher..."
pkg install git php openssh -y && git clone https://github.com/htr-tech/zphisher.git
if [ $? -eq 0 ]; then
    echo "Zphisher installed successfully."
else
    echo "Error installing Zphisher."
fi
echo ""

echo "Installing MSFvenom Payload Creator..."
pkg install metasploit-framework -y
if [ $? -eq 0 ]; then
    echo "MSFvenom Payload Creator installed successfully."
else
    echo "Error installing MSFvenom Payload Creator."
fi
echo ""

echo "Installing ReconDog..."
pkg install git python -y && git clone https://github.com/s0md3v/ReconDog.git && cd ReconDog && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "ReconDog installed successfully."
else
    echo "Error installing ReconDog."
fi
echo ""

echo "Installing Kali Linux (Full)..."
pkg install wget -y && wget -O install-nethunter-termux https://offs.ec/2MceZWr && chmod +x install-nethunter-termux && ./install-nethunter-termux kali
if [ $? -eq 0 ]; then
    echo "Kali Linux (Full) installed successfully."
else
    echo "Error installing Kali Linux (Full)."
fi
echo ""

echo "Installing RouterSploit..."
pkg install git python -y && git clone https://github.com/threat9/routersploit.git && cd routersploit && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "RouterSploit installed successfully."
else
    echo "Error installing RouterSploit."
fi
echo ""

echo "Installing GoBuster..."
pkg install golang -y && go get github.com/OJ/gobuster
if [ $? -eq 0 ]; then
    echo "GoBuster installed successfully."
else
    echo "Error installing GoBuster."
fi
echo ""

echo "Installing Node.js & npm..."
pkg install nodejs -y
if [ $? -eq 0 ]; then
    echo "Node.js & npm installed successfully."
else
    echo "Error installing Node.js & npm."
fi
echo ""

echo "Installing TypeScript..."
pkg install nodejs -y && npm install -g typescript
if [ $? -eq 0 ]; then
    echo "TypeScript installed successfully."
else
    echo "Error installing TypeScript."
fi
echo ""

echo "Installing React Native Development Tools..."
pkg install nodejs -y && npm install -g react-native-cli expo-cli
if [ $? -eq 0 ]; then
    echo "React Native Development Tools installed successfully."
else
    echo "Error installing React Native Development Tools."
fi
echo ""

echo "Installing Python 3..."
pkg install python -y
if [ $? -eq 0 ]; then
    echo "Python 3 installed successfully."
else
    echo "Error installing Python 3."
fi
echo ""

echo "Installing Ruby..."
pkg install ruby -y
if [ $? -eq 0 ]; then
    echo "Ruby installed successfully."
else
    echo "Error installing Ruby."
fi
echo ""

echo "Installing Go..."
pkg install golang -y
if [ $? -eq 0 ]; then
    echo "Go installed successfully."
else
    echo "Error installing Go."
fi
echo ""

echo "Installing Rust..."
pkg install rust -y
if [ $? -eq 0 ]; then
    echo "Rust installed successfully."
else
    echo "Error installing Rust."
fi
echo ""

echo "Installing Java JDK..."
pkg install openjdk-17 -y
if [ $? -eq 0 ]; then
    echo "Java JDK installed successfully."
else
    echo "Error installing Java JDK."
fi
echo ""

echo "Installing Kotlin..."
pkg install kotlin -y
if [ $? -eq 0 ]; then
    echo "Kotlin installed successfully."
else
    echo "Error installing Kotlin."
fi
echo ""

echo "Installing PHP..."
pkg install php -y
if [ $? -eq 0 ]; then
    echo "PHP installed successfully."
else
    echo "Error installing PHP."
fi
echo ""

echo "Installing Perl..."
pkg install perl -y
if [ $? -eq 0 ]; then
    echo "Perl installed successfully."
else
    echo "Error installing Perl."
fi
echo ""

echo "Installing C/C++ Development..."
pkg install clang -y
if [ $? -eq 0 ]; then
    echo "C/C++ Development installed successfully."
else
    echo "Error installing C/C++ Development."
fi
echo ""

echo "Installing R Language..."
pkg install r-base -y
if [ $? -eq 0 ]; then
    echo "R Language installed successfully."
else
    echo "Error installing R Language."
fi
echo ""

echo "Installing APKTool..."
pkg install apktool -y
if [ $? -eq 0 ]; then
    echo "APKTool installed successfully."
else
    echo "Error installing APKTool."
fi
echo ""

echo "Installing dex2jar..."
pkg install dex2jar -y
if [ $? -eq 0 ]; then
    echo "dex2jar installed successfully."
else
    echo "Error installing dex2jar."
fi
echo ""

echo "Installing JDK Tools..."
pkg install openjdk-17 -y
if [ $? -eq 0 ]; then
    echo "JDK Tools installed successfully."
else
    echo "Error installing JDK Tools."
fi
echo ""

echo "Installing Android Tools..."
pkg install android-tools -y
if [ $? -eq 0 ]; then
    echo "Android Tools installed successfully."
else
    echo "Error installing Android Tools."
fi
echo ""

echo "Installing JADX..."
pkg install jadx -y
if [ $? -eq 0 ]; then
    echo "JADX installed successfully."
else
    echo "Error installing JADX."
fi
echo ""

echo "Installing Objection..."
pip install objection
if [ $? -eq 0 ]; then
    echo "Objection installed successfully."
else
    echo "Error installing Objection."
fi
echo ""

echo "Installing Mobile Security Framework..."
pkg install git python -y && git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git && cd Mobile-Security-Framework-MobSF && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Mobile Security Framework installed successfully."
else
    echo "Error installing Mobile Security Framework."
fi
echo ""

echo "Installing Drozer..."
pip install drozer
if [ $? -eq 0 ]; then
    echo "Drozer installed successfully."
else
    echo "Error installing Drozer."
fi
echo ""

echo "Installing Flutter..."
pkg install flutter -y
if [ $? -eq 0 ]; then
    echo "Flutter installed successfully."
else
    echo "Error installing Flutter."
fi
echo ""

echo "Installing JShell..."
pkg install openjdk-17 -y
if [ $? -eq 0 ]; then
    echo "JShell installed successfully."
else
    echo "Error installing JShell."
fi
echo ""

echo "Installing Kali Linux with XFCE..."
pkg install wget -y && wget -O install-nethunter-termux https://offs.ec/2MceZWr && chmod +x install-nethunter-termux && ./install-nethunter-termux kali --full
if [ $? -eq 0 ]; then
    echo "Kali Linux with XFCE installed successfully."
else
    echo "Error installing Kali Linux with XFCE."
fi
echo ""

echo "Installing Kali Minimal GUI..."
pkg install wget -y && wget -O install-nethunter-termux https://offs.ec/2MceZWr && chmod +x install-nethunter-termux && ./install-nethunter-termux kali --minimal
if [ $? -eq 0 ]; then
    echo "Kali Minimal GUI installed successfully."
else
    echo "Error installing Kali Minimal GUI."
fi
echo ""

echo "Installing TigerVNC Server..."
pkg install tigervnc -y
if [ $? -eq 0 ]; then
    echo "TigerVNC Server installed successfully."
else
    echo "Error installing TigerVNC Server."
fi
echo ""

echo "Installing X11 Repository..."
pkg install x11-repo -y
if [ $? -eq 0 ]; then
    echo "X11 Repository installed successfully."
else
    echo "Error installing X11 Repository."
fi
echo ""

echo "Installing XFCE4 Desktop..."
pkg install x11-repo -y && pkg install xfce4 -y
if [ $? -eq 0 ]; then
    echo "XFCE4 Desktop installed successfully."
else
    echo "Error installing XFCE4 Desktop."
fi
echo ""

echo "Installing MATE Desktop..."
pkg install x11-repo -y && pkg install mate-desktop -y
if [ $? -eq 0 ]; then
    echo "MATE Desktop installed successfully."
else
    echo "Error installing MATE Desktop."
fi
echo ""

echo "Installing LXQt Desktop..."
pkg install x11-repo -y && pkg install lxqt -y
if [ $? -eq 0 ]; then
    echo "LXQt Desktop installed successfully."
else
    echo "Error installing LXQt Desktop."
fi
echo ""

echo "Installing i3 Window Manager..."
pkg install x11-repo -y && pkg install i3 -y
if [ $? -eq 0 ]; then
    echo "i3 Window Manager installed successfully."
else
    echo "Error installing i3 Window Manager."
fi
echo ""

echo "Installing Xorg Server..."
pkg install x11-repo -y && pkg install xorg-server -y
if [ $? -eq 0 ]; then
    echo "Xorg Server installed successfully."
else
    echo "Error installing Xorg Server."
fi
echo ""

echo "Installing aterm Terminal..."
pkg install x11-repo -y && pkg install aterm -y
if [ $? -eq 0 ]; then
    echo "aterm Terminal installed successfully."
else
    echo "Error installing aterm Terminal."
fi
echo ""

echo "Installing XFCE4 Terminal..."
pkg install x11-repo -y && pkg install xfce4-terminal -y
if [ $? -eq 0 ]; then
    echo "XFCE4 Terminal installed successfully."
else
    echo "Error installing XFCE4 Terminal."
fi
echo ""

echo "Installing Wireshark GTK..."
pkg install x11-repo -y && pkg install wireshark-gtk -y
if [ $? -eq 0 ]; then
    echo "Wireshark GTK installed successfully."
else
    echo "Error installing Wireshark GTK."
fi
echo ""

echo "Installing Firefox Browser..."
pkg install x11-repo -y && pkg install firefox -y
if [ $? -eq 0 ]; then
    echo "Firefox Browser installed successfully."
else
    echo "Error installing Firefox Browser."
fi
echo ""

echo "Installing Geany IDE..."
pkg install x11-repo -y && pkg install geany -y
if [ $? -eq 0 ]; then
    echo "Geany IDE installed successfully."
else
    echo "Error installing Geany IDE."
fi
echo ""

echo "Installing GIMP..."
pkg install x11-repo -y && pkg install gimp -y
if [ $? -eq 0 ]; then
    echo "GIMP installed successfully."
else
    echo "Error installing GIMP."
fi
echo ""

echo "Installing Inkscape..."
pkg install x11-repo -y && pkg install inkscape -y
if [ $? -eq 0 ]; then
    echo "Inkscape installed successfully."
else
    echo "Error installing Inkscape."
fi
echo ""

echo "Installing VLC Media Player..."
pkg install x11-repo -y && pkg install vlc -y
if [ $? -eq 0 ]; then
    echo "VLC Media Player installed successfully."
else
    echo "Error installing VLC Media Player."
fi
echo ""

echo "Installing Blender..."
pkg install x11-repo -y && pkg install blender -y
if [ $? -eq 0 ]; then
    echo "Blender installed successfully."
else
    echo "Error installing Blender."
fi
echo ""

echo "Installing LibreOffice..."
pkg install x11-repo -y && pkg install libreoffice -y
if [ $? -eq 0 ]; then
    echo "LibreOffice installed successfully."
else
    echo "Error installing LibreOffice."
fi
echo ""

echo "Installing Eclipse IDE..."
pkg install x11-repo -y && pkg install openjdk-17 eclipse -y
if [ $? -eq 0 ]; then
    echo "Eclipse IDE installed successfully."
else
    echo "Error installing Eclipse IDE."
fi
echo ""

echo "Installing Kali Tools with GUI..."
pkg install wget -y && wget -O install-nethunter-termux https://offs.ec/2MceZWr && chmod +x install-nethunter-termux && ./install-nethunter-termux kali
if [ $? -eq 0 ]; then
    echo "Kali Tools with GUI installed successfully."
else
    echo "Error installing Kali Tools with GUI."
fi
echo ""

echo "Installing VNC Server Setup..."
pkg install tigervnc -y && mkdir -p ~/.vnc && echo '#!/data/data/com.termux/files/usr/bin/sh\nxrdb $HOME/.Xresources\nstartxfce4 &' > ~/.vnc/xstartup && chmod +x ~/.vnc/xstartup
if [ $? -eq 0 ]; then
    echo "VNC Server Setup installed successfully."
else
    echo "Error installing VNC Server Setup."
fi
echo ""

echo "Installing VS Code Server..."
pkg install nodejs -y && npm install -g code-server
if [ $? -eq 0 ]; then
    echo "VS Code Server installed successfully."
else
    echo "Error installing VS Code Server."
fi
echo ""

echo "Installing Jupyter Notebook..."
pkg install python -y && pip install jupyter notebook
if [ $? -eq 0 ]; then
    echo "Jupyter Notebook installed successfully."
else
    echo "Error installing Jupyter Notebook."
fi
echo ""

echo "Installing Termux with Root Access..."
pkg install tsu -y
if [ $? -eq 0 ]; then
    echo "Termux with Root Access installed successfully."
else
    echo "Error installing Termux with Root Access."
fi
echo ""

echo "Installing Magisk for Termux..."
pkg install curl -y && curl -sL https://raw.githubusercontent.com/AndronixApp/AndronixOrigin/master/repo-fix.sh | bash
if [ $? -eq 0 ]; then
    echo "Magisk for Termux installed successfully."
else
    echo "Error installing Magisk for Termux."
fi
echo ""

echo "Installing tsu..."
pkg install tsu -y
if [ $? -eq 0 ]; then
    echo "tsu installed successfully."
else
    echo "Error installing tsu."
fi
echo ""

echo "Installing Termux Sudo..."
pkg install git -y && git clone https://gitlab.com/st42/termux-sudo.git && cd termux-sudo && pkg install ncurses-utils -y && cat sudo > /data/data/com.termux/files/usr/bin/sudo && chmod 700 /data/data/com.termux/files/usr/bin/sudo
if [ $? -eq 0 ]; then
    echo "Termux Sudo installed successfully."
else
    echo "Error installing Termux Sudo."
fi
echo ""

echo "Installing Termux Root Packages..."
pkg install root-repo -y
if [ $? -eq 0 ]; then
    echo "Termux Root Packages installed successfully."
else
    echo "Error installing Termux Root Packages."
fi
echo ""

echo "Installing SuperSU..."
pkg install wget -y && wget https://download.chainfire.eu/1220/SuperSU/SR5-SuperSU-v2.82-SR5-20171001224502.zip -O supersu.zip && unzip supersu.zip && cd supersu && sh update-binary
if [ $? -eq 0 ]; then
    echo "SuperSU installed successfully."
else
    echo "Error installing SuperSU."
fi
echo ""

echo "Installing BusyBox..."
pkg install busybox -y
if [ $? -eq 0 ]; then
    echo "BusyBox installed successfully."
else
    echo "Error installing BusyBox."
fi
echo ""

echo "Installing suroot..."
pkg install git -y && git clone https://github.com/MasterDevX/Termux-SU && cd Termux-SU && bash install.sh
if [ $? -eq 0 ]; then
    echo "suroot installed successfully."
else
    echo "Error installing suroot."
fi
echo ""

echo "Installing Root Repository..."
pkg install root-repo -y
if [ $? -eq 0 ]; then
    echo "Root Repository installed successfully."
else
    echo "Error installing Root Repository."
fi
echo ""

echo "Installing ADB with Root..."
pkg install android-tools -y && pkg install tsu -y
if [ $? -eq 0 ]; then
    echo "ADB with Root installed successfully."
else
    echo "Error installing ADB with Root."
fi
echo ""

echo "Installing Magisk Module Manager..."
pkg install git python -y && git clone https://github.com/Magisk-Modules-Repo/terminal_magisk_module_manager.git && cd terminal_magisk_module_manager && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Magisk Module Manager installed successfully."
else
    echo "Error installing Magisk Module Manager."
fi
echo ""

echo "Installing MTK Tools..."
pkg install git -y && git clone https://github.com/bkerler/mtkclient && cd mtkclient && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "MTK Tools installed successfully."
else
    echo "Error installing MTK Tools."
fi
echo ""

echo "Installing Termux API with Root..."
pkg install termux-api -y && pkg install tsu -y
if [ $? -eq 0 ]; then
    echo "Termux API with Root installed successfully."
else
    echo "Error installing Termux API with Root."
fi
echo ""

echo "Installing Magisk Manager..."
pkg install wget -y && wget https://github.com/topjohnwu/Magisk/releases/download/v26.3/Magisk-v26.3.apk -O magisk.apk && chmod +x magisk.apk
if [ $? -eq 0 ]; then
    echo "Magisk Manager installed successfully."
else
    echo "Error installing Magisk Manager."
fi
echo ""

echo "Installing Magisk Systemless..."
pkg install wget -y && wget https://github.com/topjohnwu/Magisk/releases/download/v26.3/Magisk-v26.3.apk -O magisk.apk && chmod +x magisk.apk
if [ $? -eq 0 ]; then
    echo "Magisk Systemless installed successfully."
else
    echo "Error installing Magisk Systemless."
fi
echo ""

echo "Installing Android SU Binary..."
pkg install git -y && git clone https://github.com/topjohnwu/Magisk.git && cd Magisk/native/jni && ndk-build
if [ $? -eq 0 ]; then
    echo "Android SU Binary installed successfully."
else
    echo "Error installing Android SU Binary."
fi
echo ""

echo "Installing Popular Magisk Modules..."
pkg install git -y && mkdir -p magisk_modules && cd magisk_modules && git clone https://github.com/Zackptg5/MMT-Extended.git && git clone https://github.com/Magisk-Modules-Repo/MagiskHide-Props-Config.git && git clone https://github.com/Magisk-Modules-Repo/wifi-bonding.git
if [ $? -eq 0 ]; then
    echo "Popular Magisk Modules installed successfully."
else
    echo "Error installing Popular Magisk Modules."
fi
echo ""

echo "Installing TWRP Recovery..."
pkg install wget -y && mkdir -p twrp && cd twrp && wget https://dl.twrp.me/twrp-installer-3.7.0_11-0-unified.zip -O twrp-installer.zip
if [ $? -eq 0 ]; then
    echo "TWRP Recovery installed successfully."
else
    echo "Error installing TWRP Recovery."
fi
echo ""

echo "Installing LineageOS Recovery..."
pkg install wget -y && mkdir -p lineage && cd lineage && wget https://download.lineageos.org/tools/extract_utils.sh -O extract_utils.sh && chmod +x extract_utils.sh
if [ $? -eq 0 ]; then
    echo "LineageOS Recovery installed successfully."
else
    echo "Error installing LineageOS Recovery."
fi
echo ""

echo "Installing Root Checker..."
pkg install wget -y && wget https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck -O root-checker.apk
if [ $? -eq 0 ]; then
    echo "Root Checker installed successfully."
else
    echo "Error installing Root Checker."
fi
echo ""

echo "Installing BusyBox for Android..."
pkg install wget -y && wget https://github.com/meefik/busybox/releases/download/1.33.1-1/busybox-v1.33.1-1.apk -O busybox.apk && chmod +x busybox.apk
if [ $? -eq 0 ]; then
    echo "BusyBox for Android installed successfully."
else
    echo "Error installing BusyBox for Android."
fi
echo ""

echo "Installing ADB & Fastboot..."
pkg install android-tools -y
if [ $? -eq 0 ]; then
    echo "ADB & Fastboot installed successfully."
else
    echo "Error installing ADB & Fastboot."
fi
echo ""

echo "Installing EdXposed Framework..."
pkg install wget -y && wget https://github.com/ElderDrivers/EdXposed/releases/download/v0.5.2.2/riru-edxposed-v0.5.2.2_4577-master-release.zip -O edxposed.zip
if [ $? -eq 0 ]; then
    echo "EdXposed Framework installed successfully."
else
    echo "Error installing EdXposed Framework."
fi
echo ""

echo "Installing LSPosed Framework..."
pkg install wget -y && wget https://github.com/LSPosed/LSPosed/releases/download/v1.8.6/LSPosed-v1.8.6-6860-zygisk-release.zip -O lsposed.zip
if [ $? -eq 0 ]; then
    echo "LSPosed Framework installed successfully."
else
    echo "Error installing LSPosed Framework."
fi
echo ""

echo "Installing SuperUser Access..."
pkg install git -y && git clone https://github.com/koush/Superuser.git && cd Superuser && ./gradlew assembleRelease
if [ $? -eq 0 ]; then
    echo "SuperUser Access installed successfully."
else
    echo "Error installing SuperUser Access."
fi
echo ""

echo "Installing One Click Root..."
pkg install wget -y && wget https://oneclickroot.com/download -O one-click-root.apk && chmod +x one-click-root.apk
if [ $? -eq 0 ]; then
    echo "One Click Root installed successfully."
else
    echo "Error installing One Click Root."
fi
echo ""

echo "Installing Framaroot..."
pkg install wget -y && wget https://framaroot.net/download/Framaroot-1.9.3.apk -O framaroot.apk && chmod +x framaroot.apk
if [ $? -eq 0 ]; then
    echo "Framaroot installed successfully."
else
    echo "Error installing Framaroot."
fi
echo ""

echo "Installing Root Genius..."
pkg install wget -y && wget https://rootgenius.com/download -O root-genius.apk && chmod +x root-genius.apk
if [ $? -eq 0 ]; then
    echo "Root Genius installed successfully."
else
    echo "Error installing Root Genius."
fi
echo ""

echo "Installing Kingo Root..."
pkg install wget -y && wget https://kingoapp.com/kingoroot.apk -O kingo-root.apk && chmod +x kingo-root.apk
if [ $? -eq 0 ]; then
    echo "Kingo Root installed successfully."
else
    echo "Error installing Kingo Root."
fi
echo ""

echo "Installing iRoot..."
pkg install wget -y && wget https://iroot.com/download/iroot.apk -O iroot.apk && chmod +x iroot.apk
if [ $? -eq 0 ]; then
    echo "iRoot installed successfully."
else
    echo "Error installing iRoot."
fi
echo ""

echo "Installing Z4Root..."
pkg install wget -y && wget https://z4root.net/z4root.apk -O z4root.apk && chmod +x z4root.apk
if [ $? -eq 0 ]; then
    echo "Z4Root installed successfully."
else
    echo "Error installing Z4Root."
fi
echo ""

echo "Installing Root Master..."
pkg install wget -y && wget https://rootmaster.net/download -O root-master.apk && chmod +x root-master.apk
if [ $? -eq 0 ]; then
    echo "Root Master installed successfully."
else
    echo "Error installing Root Master."
fi
echo ""

echo "Installing CF-Auto-Root..."
pkg install wget -y && wget https://autoroot.chainfire.eu -O cf-auto-root.zip
if [ $? -eq 0 ]; then
    echo "CF-Auto-Root installed successfully."
else
    echo "Error installing CF-Auto-Root."
fi
echo ""

echo "Installing MTK Easy SU..."
pkg install wget -y && wget https://github.com/JunioJsv/mtk-easy-su/releases/download/2.0.3/app-release.apk -O mtk-easy-su.apk && chmod +x mtk-easy-su.apk
if [ $? -eq 0 ]; then
    echo "MTK Easy SU installed successfully."
else
    echo "Error installing MTK Easy SU."
fi
echo ""

echo "Installing Root Explorer..."
pkg install wget -y && wget https://rootexplorer.co/download -O root-explorer.apk && chmod +x root-explorer.apk
if [ $? -eq 0 ]; then
    echo "Root Explorer installed successfully."
else
    echo "Error installing Root Explorer."
fi
echo ""

echo "Installing Terminal Emulator..."
pkg install wget -y && wget https://f-droid.org/repo/jackpal.androidterm_72.apk -O terminal-emulator.apk && chmod +x terminal-emulator.apk
if [ $? -eq 0 ]; then
    echo "Terminal Emulator installed successfully."
else
    echo "Error installing Terminal Emulator."
fi
echo ""

echo "Installing Root Browser..."
pkg install wget -y && wget https://rootbrowser.co/download -O root-browser.apk && chmod +x root-browser.apk
if [ $? -eq 0 ]; then
    echo "Root Browser installed successfully."
else
    echo "Error installing Root Browser."
fi
echo ""

echo "Installing UnlockRoot..."
pkg install wget -y && wget https://unlockroot.pro/download -O unlockroot.apk && chmod +x unlockroot.apk
if [ $? -eq 0 ]; then
    echo "UnlockRoot installed successfully."
else
    echo "Error installing UnlockRoot."
fi
echo ""

echo "Installing Hydra..."
pkg install hydra -y
if [ $? -eq 0 ]; then
    echo "Hydra installed successfully."
else
    echo "Error installing Hydra."
fi
echo ""

echo "Installing John the Ripper..."
pkg install john -y
if [ $? -eq 0 ]; then
    echo "John the Ripper installed successfully."
else
    echo "Error installing John the Ripper."
fi
echo ""

echo "Installing Hashcat..."
pkg install hashcat -y
if [ $? -eq 0 ]; then
    echo "Hashcat installed successfully."
else
    echo "Error installing Hashcat."
fi
echo ""

echo "Installing Crunch..."
pkg install crunch -y
if [ $? -eq 0 ]; then
    echo "Crunch installed successfully."
else
    echo "Error installing Crunch."
fi
echo ""

echo "Installing CeWL..."
pkg install ruby -y && gem install cewl
if [ $? -eq 0 ]; then
    echo "CeWL installed successfully."
else
    echo "Error installing CeWL."
fi
echo ""

echo "Installing Medusa..."
pkg install medusa -y
if [ $? -eq 0 ]; then
    echo "Medusa installed successfully."
else
    echo "Error installing Medusa."
fi
echo ""

echo "Installing Ncrack..."
pkg install ncrack -y
if [ $? -eq 0 ]; then
    echo "Ncrack installed successfully."
else
    echo "Error installing Ncrack."
fi
echo ""

echo "Installing Credmap..."
pkg install git -y && pkg install python -y && git clone https://github.com/lightos/credmap.git && cd credmap && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Credmap installed successfully."
else
    echo "Error installing Credmap."
fi
echo ""

echo "Installing Johnny..."
pkg install qt5-base -y && git clone https://github.com/openwall/johnny.git && cd johnny && qmake && make
if [ $? -eq 0 ]; then
    echo "Johnny installed successfully."
else
    echo "Error installing Johnny."
fi
echo ""

echo "Installing Wordlistctl..."
pkg install git -y && git clone https://github.com/BlackArch/wordlistctl.git && cd wordlistctl && chmod +x wordlistctl.py
if [ $? -eq 0 ]; then
    echo "Wordlistctl installed successfully."
else
    echo "Error installing Wordlistctl."
fi
echo ""

echo "Installing CUPP..."
pkg install git -y && pkg install python -y && git clone https://github.com/Mebus/cupp.git && cd cupp && chmod +x cupp.py
if [ $? -eq 0 ]; then
    echo "CUPP installed successfully."
else
    echo "Error installing CUPP."
fi
echo ""

echo "Installing BruteSpray..."
pkg install git -y && pkg install python -y && git clone https://github.com/x90skysn3k/brutespray.git && cd brutespray && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "BruteSpray installed successfully."
else
    echo "Error installing BruteSpray."
fi
echo ""

echo "Installing Mimikatz..."
pkg install git -y && git clone https://github.com/gentilkiwi/mimikatz.git
if [ $? -eq 0 ]; then
    echo "Mimikatz installed successfully."
else
    echo "Error installing Mimikatz."
fi
echo ""

echo "Installing Patator..."
pkg install git -y && pkg install python -y && git clone https://github.com/lanjelot/patator.git && cd patator && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "Patator installed successfully."
else
    echo "Error installing Patator."
fi
echo ""

echo "Installing THC Hydra GUI..."
pkg install git -y && pkg install python -y && git clone https://github.com/KALILINUXTRICKSYT/eashydra.git && cd eashydra && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "THC Hydra GUI installed successfully."
else
    echo "Error installing THC Hydra GUI."
fi
echo ""

echo "Installing Chntpw..."
pkg install chntpw -y
if [ $? -eq 0 ]; then
    echo "Chntpw installed successfully."
else
    echo "Error installing Chntpw."
fi
echo ""

echo "Installing Maskprocessor..."
pkg install git -y && git clone https://github.com/hashcat/maskprocessor.git && cd maskprocessor && make
if [ $? -eq 0 ]; then
    echo "Maskprocessor installed successfully."
else
    echo "Error installing Maskprocessor."
fi
echo ""

echo "Installing Ophcrack..."
pkg install ophcrack -y
if [ $? -eq 0 ]; then
    echo "Ophcrack installed successfully."
else
    echo "Error installing Ophcrack."
fi
echo ""

echo "Installing pwdump..."
pkg install git -y && git clone https://github.com/Seabreg/pwdump.git && cd pwdump && make
if [ $? -eq 0 ]; then
    echo "pwdump installed successfully."
else
    echo "Error installing pwdump."
fi
echo ""

echo "Installing Samdump2..."
pkg install samdump2 -y
if [ $? -eq 0 ]; then
    echo "Samdump2 installed successfully."
else
    echo "Error installing Samdump2."
fi
echo ""

echo "Installing Wireshark CLI (tshark)..."
pkg install tshark -y
if [ $? -eq 0 ]; then
    echo "Wireshark CLI (tshark) installed successfully."
else
    echo "Error installing Wireshark CLI (tshark)."
fi
echo ""

echo "Installing Nmap..."
pkg install nmap -y
if [ $? -eq 0 ]; then
    echo "Nmap installed successfully."
else
    echo "Error installing Nmap."
fi
echo ""

echo "Installing Netcat..."
pkg install netcat -y
if [ $? -eq 0 ]; then
    echo "Netcat installed successfully."
else
    echo "Error installing Netcat."
fi
echo ""

echo "Installing SQLMap..."
pkg install python -y && pip install sqlmap
if [ $? -eq 0 ]; then
    echo "SQLMap installed successfully."
else
    echo "Error installing SQLMap."
fi
echo ""

echo "Installing Nikto..."
pkg install perl -y && cpan install Net::SSLeay && git clone https://github.com/sullo/nikto.git
if [ $? -eq 0 ]; then
    echo "Nikto installed successfully."
else
    echo "Error installing Nikto."
fi
echo ""

echo "Installing DIRB..."
pkg install dirb -y
if [ $? -eq 0 ]; then
    echo "DIRB installed successfully."
else
    echo "Error installing DIRB."
fi
echo ""

echo "Installing Bettercap..."
pkg install bettercap -y
if [ $? -eq 0 ]; then
    echo "Bettercap installed successfully."
else
    echo "Error installing Bettercap."
fi
echo ""

echo "Installing Ettercap..."
pkg install ettercap -y
if [ $? -eq 0 ]; then
    echo "Ettercap installed successfully."
else
    echo "Error installing Ettercap."
fi
echo ""

echo "Installing Aircrack-ng..."
pkg install aircrack-ng -y
if [ $? -eq 0 ]; then
    echo "Aircrack-ng installed successfully."
else
    echo "Error installing Aircrack-ng."
fi
echo ""

echo "Installing Reaver..."
pkg install reaver -y
if [ $? -eq 0 ]; then
    echo "Reaver installed successfully."
else
    echo "Error installing Reaver."
fi
echo ""

echo "Installing Wifite..."
pkg install git -y && pkg install python -y && git clone https://github.com/derv82/wifite.git && cd wifite && chmod +x wifite.py
if [ $? -eq 0 ]; then
    echo "Wifite installed successfully."
else
    echo "Error installing Wifite."
fi
echo ""

echo "Installing Hping3..."
pkg install hping3 -y
if [ $? -eq 0 ]; then
    echo "Hping3 installed successfully."
else
    echo "Error installing Hping3."
fi
echo ""

echo "Installing Masscan..."
pkg install masscan -y
if [ $? -eq 0 ]; then
    echo "Masscan installed successfully."
else
    echo "Error installing Masscan."
fi
echo ""

echo "Installing DNSenum..."
pkg install perl -y && pkg install git -y && git clone https://github.com/fwaeytens/dnsenum.git && cd dnsenum && chmod +x dnsenum.pl
if [ $? -eq 0 ]; then
    echo "DNSenum installed successfully."
else
    echo "Error installing DNSenum."
fi
echo ""

echo "Installing dsniff..."
pkg install dsniff -y
if [ $? -eq 0 ]; then
    echo "dsniff installed successfully."
else
    echo "Error installing dsniff."
fi
echo ""

echo "Installing Responder..."
pkg install git -y && pkg install python -y && git clone https://github.com/lgandx/Responder.git && cd Responder && chmod +x Responder.py
if [ $? -eq 0 ]; then
    echo "Responder installed successfully."
else
    echo "Error installing Responder."
fi
echo ""

echo "Installing Foremost..."
pkg install foremost -y
if [ $? -eq 0 ]; then
    echo "Foremost installed successfully."
else
    echo "Error installing Foremost."
fi
echo ""

echo "Installing Volatility..."
pkg install python -y && pip install volatility
if [ $? -eq 0 ]; then
    echo "Volatility installed successfully."
else
    echo "Error installing Volatility."
fi
echo ""

echo "Installing Autopsy..."
pkg install sleuthkit -y && pkg install git -y && git clone https://github.com/sleuthkit/autopsy.git
if [ $? -eq 0 ]; then
    echo "Autopsy installed successfully."
else
    echo "Error installing Autopsy."
fi
echo ""

echo "Installing Scalpel..."
pkg install scalpel -y
if [ $? -eq 0 ]; then
    echo "Scalpel installed successfully."
else
    echo "Error installing Scalpel."
fi
echo ""

echo "Installing ExifTool..."
pkg install exiftool -y
if [ $? -eq 0 ]; then
    echo "ExifTool installed successfully."
else
    echo "Error installing ExifTool."
fi
echo ""

echo "Installing Binwalk..."
pkg install binwalk -y
if [ $? -eq 0 ]; then
    echo "Binwalk installed successfully."
else
    echo "Error installing Binwalk."
fi
echo ""

echo "Installing ddrescue..."
pkg install ddrescue -y
if [ $? -eq 0 ]; then
    echo "ddrescue installed successfully."
else
    echo "Error installing ddrescue."
fi
echo ""

echo "Installing TestDisk..."
pkg install testdisk -y
if [ $? -eq 0 ]; then
    echo "TestDisk installed successfully."
else
    echo "Error installing TestDisk."
fi
echo ""

echo "Installing PhotoRec..."
pkg install testdisk -y
if [ $? -eq 0 ]; then
    echo "PhotoRec installed successfully."
else
    echo "Error installing PhotoRec."
fi
echo ""

echo "Installing ClamAV..."
pkg install clamav -y
if [ $? -eq 0 ]; then
    echo "ClamAV installed successfully."
else
    echo "Error installing ClamAV."
fi
echo ""

echo "Installing YARA..."
pkg install yara -y
if [ $? -eq 0 ]; then
    echo "YARA installed successfully."
else
    echo "Error installing YARA."
fi
echo ""

echo "Installing Radare2..."
pkg install radare2 -y
if [ $? -eq 0 ]; then
    echo "Radare2 installed successfully."
else
    echo "Error installing Radare2."
fi
echo ""

echo "Installing Ghidra..."
pkg install wget -y && wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.1.3_build/ghidra_10.1.3_PUBLIC_20220421.zip && unzip ghidra_10.1.3_PUBLIC_20220421.zip
if [ $? -eq 0 ]; then
    echo "Ghidra installed successfully."
else
    echo "Error installing Ghidra."
fi
echo ""

echo "Installing ApkTool..."
pkg install apktool -y
if [ $? -eq 0 ]; then
    echo "ApkTool installed successfully."
else
    echo "Error installing ApkTool."
fi
echo ""

echo "Installing Dex2jar..."
pkg install dex2jar -y
if [ $? -eq 0 ]; then
    echo "Dex2jar installed successfully."
else
    echo "Error installing Dex2jar."
fi
echo ""

echo "Installing JD-GUI..."
pkg install wget -y && wget https://github.com/java-decompiler/jd-gui/releases/download/v1.6.6/jd-gui-1.6.6.jar
if [ $? -eq 0 ]; then
    echo "JD-GUI installed successfully."
else
    echo "Error installing JD-GUI."
fi
echo ""

echo "Installing JADX..."
pkg install jadx -y
if [ $? -eq 0 ]; then
    echo "JADX installed successfully."
else
    echo "Error installing JADX."
fi
echo ""

echo "Installing Objection..."
pkg install python -y && pip install objection
if [ $? -eq 0 ]; then
    echo "Objection installed successfully."
else
    echo "Error installing Objection."
fi
echo ""

echo "Installing MobSF..."
pkg install git -y && pkg install python -y && git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git && cd Mobile-Security-Framework-MobSF && pip install -r requirements.txt
if [ $? -eq 0 ]; then
    echo "MobSF installed successfully."
else
    echo "Error installing MobSF."
fi
echo ""

echo "====================================="
echo "Installation complete!"
echo "====================================="
